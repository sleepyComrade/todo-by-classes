{"version":3,"file":"bundle.js","mappings":"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","sources":["webpack://my-webpack-project/./src/components/main-wrap.ts","webpack://my-webpack-project/./src/components/task.ts","webpack://my-webpack-project/./src/components/popup.ts","webpack://my-webpack-project/./src/components/add-button.ts","webpack://my-webpack-project/./src/components/task-list.ts","webpack://my-webpack-project/./src/index.ts","webpack://my-webpack-project/./src/components/todo.ts","webpack://my-webpack-project/./src/components/fake-server.ts"],"sourcesContent":["export class MainWrap {\n  wrap\n  constructor(parent: HTMLElement) {\n    this.wrap = document.createElement('div');\n    this.wrap.className = 'wrapper';\n    parent.append(this.wrap);\n  }\n}\n\nexport type Wrap = MainWrap;","import { Api } from \"./fake-server\";\nimport { ServerTaskItem } from \"./i-server-item\";\nimport { TodoTaskList } from \"./task-list\";\nimport { Wrap } from \"./main-wrap\";\n\nexport class Task {\n  api: Api;\n  itemData: ServerTaskItem;\n  parent: TodoTaskList;\n  value: string;\n  mainWrap: Wrap;\n  task\n  text\n  control\n  closeBtn\n  editBtn\n  constructor(parent: TodoTaskList, edit: (parent: Wrap, list: TodoTaskList, initialData: ServerTaskItem, isNew: boolean) => any, value: string, mainWrap: Wrap, api: Api, itemData: ServerTaskItem) {\n    this.api = api;\n    this.itemData = itemData;\n    this.parent = parent;\n    this.value = value;\n    this.mainWrap = mainWrap;\n    this.task = document.createElement('div');\n    this.task.className = 'task-wrap';\n\n    this.parent.list.append(this.task);\n\n    this.text = document.createElement('p');\n    this.text.textContent = this.value;\n    if (this.itemData.done) {\n      this.text.className = 'task-done';\n    }\n    this.task.append(this.text);\n\n    this.control = document.createElement('div');\n    this.control.className = 'controls-wrap';\n    this.task.append(this.control);\n\n    this.closeBtn = document.createElement('button');\n    this.closeBtn.className = 'close-task-button';\n    this.closeBtn.textContent = 'x';\n    this.closeBtn.onclick = () => {\n      this.closeBtn.textContent = 'loading...';\n      if (this.itemData.id) {\n        this.api.removeItem(this.itemData.id).then((res) => {\n          this.closeBtn.textContent = 'x';\n          this.task.remove();\n        }).catch((err) => {\n          console.log('rejected');\n          this.closeBtn.textContent = 'rejected';\n        });\n      }\n    };\n    this.control.append(this.closeBtn);\n\n    this.editBtn = document.createElement('button');\n    this.editBtn.className = 'edit-task-button';\n    this.editBtn.textContent = 'edit';\n    this.editBtn.onclick = () => {\n      const popUp = edit(this.mainWrap, this.parent, this.itemData, false);\n      popUp.onClose = (done: boolean, value: string) => {\n        if (done) {\n          this.text.classList.add('task-done');\n        } else {\n          this.text.classList.remove('task-done');\n        }\n        this.text.textContent = value;\n      }\n    }\n    this.control.append(this.editBtn);\n  }\n}","import { Task } from \"./task\";\nimport { Api } from \"./fake-server\";\nimport { ServerTaskItem } from \"./i-server-item\";\nimport { TodoTaskList } from \"./task-list\";\nimport { Wrap } from \"./main-wrap\";\n\nexport class PopUp {\n  api: Api;\n  parent: Wrap;\n  taskList: TodoTaskList;\n  showPopup: (parent: Wrap, list: TodoTaskList, initialData: ServerTaskItem, isNew: boolean) => HTMLElement;\n  overlay\n  popup\n  button\n  input\n  state\n  applybutton\n  checkbox\n  stateDesc\n  isNew\n  itemData: ServerTaskItem;\n  onClose: any;\n  constructor(parent: Wrap, taskList: TodoTaskList, showPopup: (parent: Wrap, list: TodoTaskList, initialData: ServerTaskItem, isNew: boolean) => HTMLElement, api: Api, initialData: ServerTaskItem, isNew: boolean) {\n    this.api = api;\n    this.parent = parent;\n    this.taskList = taskList;\n    this.showPopup = showPopup;\n    this.itemData = !initialData ? {name: '', done: false, id: undefined} : initialData;\n    this.isNew = isNew;\n    \n    this.overlay = document.createElement('div');\n    this.overlay.className = 'overlay';\n    this.overlay.onclick = () => this.closePopup();\n\n    this.popup = document.createElement('div');\n    this.popup.className = 'popup-wrap';\n\n    this.button = document.createElement('button');\n    this.button.className = 'close-button';\n    this.button.textContent = 'x';\n    this.button.onclick = () => this.closePopup();\n    this.popup.append(this.button);\n\n    this.input = document.createElement('input');\n    this.input.className = 'popup-input';\n    this.input.setAttribute('type', 'text');\n    this.input.placeholder = 'add a task';\n    if (this.itemData.name) {\n      this.input.value = this.itemData.name;\n    }\n    this.input.onkeydown = (e) => {\n      if (e.key === 'Enter') {\n        this.applyTask();\n      }\n    }\n    this.popup.append(this.input);\n\n    this.state = document.createElement('div');\n    this.state.className = 'state-wrap';\n    this.popup.append(this.state);\n\n    this.checkbox = document.createElement('input');\n    this.checkbox.type = 'checkbox';\n    this.checkbox.className = 'state-checkbox';\n    if (this.itemData.done) {\n      this.checkbox.checked = true;\n    }\n    this.checkbox.onchange = () => this.itemData.done = this.checkbox.checked ? true : false;\n    this.state.append(this.checkbox);\n\n    this.stateDesc = document.createElement('p');\n    this.stateDesc.textContent = 'Done';\n    this.state.append(this.stateDesc);\n\n    this.applybutton = document.createElement('button');\n    this.applybutton.className = 'apply-button';\n    this.applybutton.textContent = 'Ok';\n    this.applybutton.onclick = () => this.applyTask();\n    this.popup.append(this.applybutton);\n  }\n\n  openPopup() {\n    this.parent.wrap.append(this.overlay);\n    this.parent.wrap.append(this.popup);\n    this.input.focus();\n  }\n\n  closePopup() {\n    this.overlay.remove();\n    this.popup.remove();\n  }\n\n  applyTask() {\n    if (this.itemData === undefined) {\n      this.itemData = {name: '', done: false, id: undefined};\n    }\n    this.itemData.name = this.input.value;\n    if (!this.input.value) {\n      alert('add a task please');\n    } else if (this.isNew) {\n      this.api.getIdNum(this.itemData);\n\n      this.applybutton.textContent = 'loading...';\n      this.api.addItem(this.itemData).then((res) => {\n        console.log(res);\n        this.applybutton.textContent = 'Ok';\n        const task = new Task(this.taskList, this.showPopup, this.input.value, this.parent, this.api, this.itemData);\n        this.closePopup();\n      }).catch((err) => {\n        console.log('rejected');\n        this.applybutton.textContent = 'rejected';\n        this.api.removeErrItem();\n        this.api.correctIdCount();\n      });\n    } else if (!this.isNew) {\n      this.applybutton.textContent = 'loading...';\n      if (this.itemData.id) {\n        this.api.editItem(this.itemData.id, this.itemData).then((res) => {\n          console.log(res);\n          this.applybutton.textContent = 'Ok';\n          this.onClose(this.itemData.done, this.input.value);\n          this.closePopup();\n        }).catch((err) => {\n          console.log('rejected');\n          this.applybutton.textContent = 'rejected';\n          this.api.removeErrItem();\n        });\n      }\n    }\n  }\n}\n\nexport type TodoPopup = PopUp;","import { ServerTaskItem } from \"./i-server-item\";\nimport { TodoTaskList } from \"./task-list\";\nimport { Wrap } from \"./main-wrap\";\n\nexport class AddButton {\n  parent: Wrap;\n  list: TodoTaskList;\n  button\n  constructor(click: (parent: Wrap, list: TodoTaskList, initialData: ServerTaskItem, isNew: boolean) => HTMLElement, parent: Wrap, list: TodoTaskList) {\n    this.parent = parent;\n    this.list = list;\n    this.button = document.createElement('button');\n    this.button.className = 'openButton';\n    this.button.textContent = '+';\n    this.button.onclick = () => click(this.parent, this.list, {name: '', done: false, id: undefined}, true);    \n    parent.wrap.insertBefore(this.button, parent.wrap.firstChild);\n  }\n}\n\nexport type TodoAddBtn = AddButton;","export class TaskList {\n  list\n  constructor(parent: { wrap: HTMLElement }) {\n    this.list = document.createElement('div');\n    this.list.className = 'task-list';\n    parent.wrap.append(this.list);\n  }\n}\n\nexport type TodoTaskList = TaskList;","import { Todo } from \"./components/todo\";\nimport { api } from \"./components/fake-server\";\nimport './style.css';\n\nconst todo = new Todo(api);","import { MainWrap, Wrap } from \"./main-wrap\";\nimport { PopUp } from \"./popup\";\nimport { AddButton, TodoAddBtn } from \"./add-button\";\nimport { TaskList, TodoTaskList } from \"./task-list\";\nimport { Api } from \"./fake-server\";\nimport { ServerTaskItem } from \"./i-server-item\";\n\nexport class Todo {\n  api: Api;\n  mainWrap: Wrap;\n  taskList: TodoTaskList;\n  showPopup: any;\n  addButton: TodoAddBtn;\n  constructor(api: Api) {\n    this.api = api;\n    this.mainWrap = new MainWrap(document.body);\n    this.taskList = new TaskList(this.mainWrap);\n    this.showPopup = (parent: Wrap, list: TodoTaskList, initialData: ServerTaskItem, isNew: boolean) => {\n      const popUp = new PopUp(parent, list, this.showPopup, this.api, initialData, isNew);\n      popUp.openPopup();\n      return popUp;\n    }\n    this.addButton = new AddButton(this.showPopup, this.mainWrap, this.taskList);\n  }\n}","import { ServerTaskItem } from \"./i-server-item\";\n\nclass FakeServer{\n  _data;\n  idInitial: number;\n\n  constructor(initial: ServerTaskItem[]){\n    this._data = JSON.parse(JSON.stringify(initial));\n    this.idInitial = this._data.length;\n  }\n\n  _fakeSend(data: ServerTaskItem[]): Promise <string>{\n    return new Promise((res, rej)=>{\n      setTimeout(()=>{\n        \n        if (Math.random()< 0.1) {\n          rej('Fake server reject');\n        } else {\n          res(JSON.stringify(data));\n        }\n      }, Math.random()*1000 + 50);\n    });\n  }\n\n  getList(){\n    return this._fakeSend(this._data);\n  }\n\n  addItem(itemData: ServerTaskItem){\n    this._data.push(itemData);\n    return this._fakeSend(this._data);\n  }\n\n  removeItem(id: number){\n    let num;\n    this._data.forEach((el: ServerTaskItem, i: number) => {\n      if (el.id === id) {\n        num = i;\n      }\n    })\n    if (num !== undefined) {\n      this._data.splice(num, 1);\n    }\n    return this._fakeSend(this._data);\n  }\n\n  editItem(id: number, itemData: ServerTaskItem){\n    this._data.splice(id, 1, itemData);\n    return this._fakeSend(this._data);\n  }\n\n  removeErrItem() {\n    this._data.pop();\n  }\n\n  correctIdCount() {\n    this.idInitial--;\n  }\n\n  getIdNum(itemData: ServerTaskItem) {\n    itemData.id = this.idInitial;\n    this.idInitial++;\n  }\n}\n\nconst initialData: ServerTaskItem[] = [\n  {\n    name: 'a',\n    done: true,\n  },\n  {\n    name: 'abc',\n    done: false\n  },\n  {\n    name: 'sjfdk',\n    done: false\n  }\n];\n\nexport type Api = FakeServer;\nexport const api = new FakeServer(initialData);"],"names":["parent","this","wrap","document","createElement","className","append","edit","value","mainWrap","api","itemData","task","list","text","textContent","done","control","closeBtn","onclick","id","removeItem","then","res","remove","catch","err","console","log","editBtn","onClose","classList","add","taskList","showPopup","initialData","isNew","name","undefined","overlay","closePopup","popup","button","input","setAttribute","placeholder","onkeydown","e","key","applyTask","state","checkbox","type","checked","onchange","stateDesc","applybutton","openPopup","focus","getIdNum","addItem","Task","removeErrItem","correctIdCount","editItem","alert","click","insertBefore","firstChild","MainWrap","body","TaskList","popUp","PopUp","addButton","AddButton","initial","_data","JSON","parse","stringify","idInitial","length","_fakeSend","data","Promise","rej","setTimeout","Math","random","getList","push","num","forEach","el","i","splice","pop"],"sourceRoot":""}